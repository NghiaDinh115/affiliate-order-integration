name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2]
        wordpress-version: [5.0, 5.9, 6.0, 6.1, 6.2, latest]
        
    name: PHP ${{ matrix.php-version }} - WP ${{ matrix.wordpress-version }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql
        coverage: xdebug
        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run PHP CodeSniffer
      run: composer run cs
      
    - name: Run PHPUnit tests
      run: composer run test
      
  security:
    runs-on: ubuntu-latest
    name: Security Check
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run security check
      run: composer audit
      
  package:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        
    - name: Install production dependencies
      run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader
      
    - name: Create release package
      run: |
        mkdir -p release
        rsync -av --exclude-from='.gitignore' \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='tests' \
          --exclude='phpcs.xml' \
          --exclude='phpunit.xml' \
          --exclude='COMPOSER_INSTALL.md' \
          --exclude='node_modules' \
          . release/my-sample-plugin/
          
    - name: Create ZIP
      run: |
        cd release
        zip -r my-sample-plugin-${{ github.event.release.tag_name }}.zip my-sample-plugin/
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/my-sample-plugin-${{ github.event.release.tag_name }}.zip
        asset_name: my-sample-plugin-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
